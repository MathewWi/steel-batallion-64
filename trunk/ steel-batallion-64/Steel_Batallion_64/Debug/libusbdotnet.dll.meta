Assembly LibUsbDotNet, Version=2.2.*, Culture=Invariant Language (Invariant Country): 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=SHA1, flags=None
Assembly System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=SHA1, flags=None
Assembly System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=SHA1, flags=None
Class LibUsbDotNet.Main.UsbRegDeviceList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerable`1[LibUsbDotNet.Main.UsbRegistry]
    System.Collections.IEnumerable
  Properties:
    LibUsbDotNet.Main.UsbRegistry Item [Int32] 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Find(Predicate`1): PrivateScope, Public, HideBySig
    FindAll(Predicate`1): PrivateScope, Public, HideBySig
    FindLast(Predicate`1): PrivateScope, Public, HideBySig
    Find(UsbDeviceFinder): PrivateScope, Public, HideBySig
    FindAll(UsbDeviceFinder): PrivateScope, Public, HideBySig
    FindLast(UsbDeviceFinder): PrivateScope, Public, HideBySig
    Contains(UsbRegistry): PrivateScope, Public, HideBySig
    CopyTo(UsbRegistry[], Int32): PrivateScope, Public, HideBySig
    IndexOf(UsbRegistry): PrivateScope, Public, HideBySig
Class LibUsbDotNet.Main.UsbEndpointBase: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Fields:
    Int32 MaxReadWrite : Public, Static
  Properties:
    Boolean IsDisposed 'get ' : 
    LibUsbDotNet.UsbDevice Device 'get ' : 
    Byte EpNum 'get ' : 
    LibUsbDotNet.Main.EndpointType Type 'get ' : 
    LibUsbDotNet.Info.UsbEndpointInfo EndpointInfo 'get ' : 
  Methods:
    get_IsDisposed(): PrivateScope, Public, HideBySig, SpecialName
    get_Device(): PrivateScope, Public, HideBySig, SpecialName
    get_EpNum(): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    get_EndpointInfo(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Abort(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Flush(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Transfer(IntPtr, Int32, Int32, Int32, Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SubmitAsyncTransfer(Object, Int32, Int32, Int32, UsbTransfer&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SubmitAsyncTransfer(IntPtr, Int32, Int32, Int32, UsbTransfer&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NewAsyncTransfer(): PrivateScope, Public, HideBySig
    LookupEndpointInfo(UsbConfigInfo, Byte, UsbInterfaceInfo&(Out), UsbEndpointInfo&(Out)): PrivateScope, Public, Static, HideBySig
    Transfer(Object, Int32, Int32, Int32, Int32&(Out)): PrivateScope, Public, HideBySig
Class LibUsbDotNet.UsbEndpointWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :LibUsbDotNet.Main.UsbEndpointBase
  Methods:
    Write(Byte[], Int32, Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(IntPtr, Int32, Int32, Int32, Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(Byte[], Int32, Int32, Int32, Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(Object, Int32, Int32, Int32, Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(Object, Int32, Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class LibUsbDotNet.UsbEndpointReader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :LibUsbDotNet.Main.UsbEndpointBase
  Properties:
    Int32 DefReadBufferSize 'get set' : 
    Boolean DataReceivedEnabled 'get set' : 
    Int32 ReadBufferSize 'get set' : 
    System.Threading.ThreadPriority ReadThreadPriority 'get set' : 
  Events:
    System.EventHandler`1[LibUsbDotNet.Main.EndpointDataEventArgs] DataReceived: 
    System.EventHandler`1[LibUsbDotNet.Main.DataReceivedEnabledChangedEventArgs] DataReceivedEnabledChanged: 
  Methods:
    get_DefReadBufferSize(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_DefReadBufferSize(Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DataReceivedEnabled(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DataReceivedEnabled(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ReadBufferSize(): PrivateScope, Public, HideBySig, SpecialName
    set_ReadBufferSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ReadThreadPriority(): PrivateScope, Public, HideBySig, SpecialName
    set_ReadThreadPriority(ThreadPriority): PrivateScope, Public, HideBySig, SpecialName
    Read(Byte[], Int32, Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Read(IntPtr, Int32, Int32, Int32, Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Read(Byte[], Int32, Int32, Int32, Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Read(Object, Int32, Int32, Int32, Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Read(Object, Int32, Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadFlush(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    add_DataReceived(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_DataReceived(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_DataReceivedEnabledChanged(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_DataReceivedEnabledChanged(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Struct LibUsbDotNet.WinUsb.DeviceInformationTypes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    LibUsbDotNet.WinUsb.DeviceInformationTypes DeviceSpeed = 1 : Public, Static, Literal, HasDefault
Class LibUsbDotNet.Main.SafeContextHandle: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Runtime.InteropServices.SafeHandle
  Properties:
    Boolean IsInvalid 'get ' : 
  Methods:
    get_IsInvalid(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class MonoLibUsb.MonoUsbDeviceHandle: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :LibUsbDotNet.Main.SafeContextHandle
    Void .ctor(MonoLibUsb.Profile.MonoUsbProfileHandle): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String LastErrorString 'get ' : 
    MonoLibUsb.MonoUsbError LastErrorCode 'get ' : 
  Methods:
    get_LastErrorString(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LastErrorCode(): PrivateScope, Public, Static, HideBySig, SpecialName
    Close(): PrivateScope, Public, HideBySig
Class LibUsbDotNet.Main.UsbTransfer: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    System.IDisposable
    System.IAsyncResult
  Properties:
    LibUsbDotNet.Main.UsbEndpointBase EndpointBase 'get ' : 
    Boolean IsCancelled 'get ' : 
    System.Threading.WaitHandle CancelWaitHandle 'get ' : 
    Int32 IsoPacketSize 'get ' : 
    Int32 Transmitted 'get ' : 
    Int32 Remaining 'get ' : 
    Boolean IsCompleted 'get ' : 
    System.Threading.WaitHandle AsyncWaitHandle 'get ' : 
    System.Object AsyncState 'get ' : 
    Boolean CompletedSynchronously 'get ' : 
  Methods:
    get_EndpointBase(): PrivateScope, Public, HideBySig, SpecialName
    get_IsCancelled(): PrivateScope, Public, HideBySig, SpecialName
    get_CancelWaitHandle(): PrivateScope, Public, HideBySig, SpecialName
    get_IsoPacketSize(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Cancel(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Submit(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Wait(Int32&(Out), Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Wait(Int32&(Out)): PrivateScope, Public, HideBySig
    Fill(Object, Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Fill(Object, Int32, Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Fill(IntPtr, Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Fill(IntPtr, Int32, Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IncrementTransfer(Int32): PrivateScope, Public, HideBySig
    get_Transmitted(): PrivateScope, Public, HideBySig, SpecialName
    get_Remaining(): PrivateScope, Public, HideBySig, SpecialName
    Reset(): PrivateScope, Public, HideBySig
    get_IsCompleted(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AsyncWaitHandle(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AsyncState(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CompletedSynchronously(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Interface LibUsbDotNet.DeviceNotify.Info.IVolumeNotifyInfo: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    System.String Letter 'get ' : 
    Boolean ChangeAffectsMediaInDrive 'get ' : 
    Boolean IsNetworkVolume 'get ' : 
    Int16 Flags 'get ' : 
    Int32 Unitmask 'get ' : 
  Methods:
    get_Letter(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ChangeAffectsMediaInDrive(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsNetworkVolume(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Flags(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Unitmask(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class LibUsbDotNet.DeviceNotify.Info.VolumeNotifyInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Interfaces:
    LibUsbDotNet.DeviceNotify.Info.IVolumeNotifyInfo
  Properties:
    System.String Letter 'get ' : 
    Boolean ChangeAffectsMediaInDrive 'get ' : 
    Boolean IsNetworkVolume 'get ' : 
    Int16 Flags 'get ' : 
    Int32 Unitmask 'get ' : 
  Methods:
    get_Letter(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ChangeAffectsMediaInDrive(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsNetworkVolume(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Flags(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Unitmask(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct LibUsbDotNet.DeviceNotify.DeviceType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    LibUsbDotNet.DeviceNotify.DeviceType Oem = 0 : Public, Static, Literal, HasDefault
    LibUsbDotNet.DeviceNotify.DeviceType DevNode = 1 : Public, Static, Literal, HasDefault
    LibUsbDotNet.DeviceNotify.DeviceType Volume = 2 : Public, Static, Literal, HasDefault
    LibUsbDotNet.DeviceNotify.DeviceType Port = 3 : Public, Static, Literal, HasDefault
    LibUsbDotNet.DeviceNotify.DeviceType Net = 4 : Public, Static, Literal, HasDefault
    LibUsbDotNet.DeviceNotify.DeviceType DeviceInterface = 5 : Public, Static, Literal, HasDefault
    LibUsbDotNet.DeviceNotify.DeviceType Handle = 6 : Public, Static, Literal, HasDefault
Class LibUsbDotNet.Descriptors.UsbDescriptor: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Abstract, BeforeFieldInit
  Fields:
    Byte Length : Public
    LibUsbDotNet.Descriptors.DescriptorType DescriptorType : Public
    System.String ToStringParamValueSeperator : Public, Static
    System.String ToStringFieldSeperator : Public, Static
    Int32 Size : Public, Static, InitOnly
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class LibUsbDotNet.Descriptors.UsbEndpointDescriptor: AutoLayout, AnsiClass, Class, Public, SequentialLayout, BeforeFieldInit
  :LibUsbDotNet.Descriptors.UsbDescriptor
  Fields:
    Byte EndpointID : Public, InitOnly
    Byte Attributes : Public, InitOnly
    Int16 MaxPacketSize : Public, InitOnly
    Byte Interval : Public, InitOnly
    Byte Refresh : Public, InitOnly
    Byte SynchAddress : Public, InitOnly
    Int32 Size : Public, Static, InitOnly
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(String, String, String): PrivateScope, Public, HideBySig
Class LibUsbDotNet.WinUsb.PipePolicies: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Properties:
    Boolean AllowPartialReads 'get set' : 
    Boolean ShortPacketTerminate 'get set' : 
    Boolean AutoClearStall 'get set' : 
    Boolean AutoFlush 'get set' : 
    Boolean IgnoreShortPackets 'get set' : 
    Boolean RawIo 'get set' : 
    Int32 PipeTransferTimeout 'get set' : 
    Int32 MaxTransferSize 'get ' : 
  Methods:
    get_AllowPartialReads(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowPartialReads(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ShortPacketTerminate(): PrivateScope, Public, HideBySig, SpecialName
    set_ShortPacketTerminate(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AutoClearStall(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoClearStall(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AutoFlush(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoFlush(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IgnoreShortPackets(): PrivateScope, Public, HideBySig, SpecialName
    set_IgnoreShortPackets(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_RawIo(): PrivateScope, Public, HideBySig, SpecialName
    set_RawIo(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_PipeTransferTimeout(): PrivateScope, Public, HideBySig, SpecialName
    set_PipeTransferTimeout(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MaxTransferSize(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class MonoLibUsb.Descriptors.MonoUsbInterface: AutoLayout, AnsiClass, Class, Public, SequentialLayout, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 num_altsetting : Public, InitOnly
  Properties:
    System.Collections.Generic.List`1[MonoLibUsb.Descriptors.MonoUsbAltInterfaceDescriptor] AltInterfaceList 'get ' : 
  Methods:
    get_AltInterfaceList(): PrivateScope, Public, HideBySig, SpecialName
Struct MonoLibUsb.Profile.AddRemoveType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MonoLibUsb.Profile.AddRemoveType Added = 0 : Public, Static, Literal, HasDefault
    MonoLibUsb.Profile.AddRemoveType Removed = 1 : Public, Static, Literal, HasDefault
Interface LibUsbDotNet.DeviceNotify.IDeviceNotifier: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Boolean Enabled 'get set' : 
  Events:
    System.EventHandler`1[LibUsbDotNet.DeviceNotify.DeviceNotifyEventArgs] OnDeviceNotify: 
  Methods:
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Enabled(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    add_OnDeviceNotify(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_OnDeviceNotify(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class LibUsbDotNet.DeviceNotify.Linux.LinuxDeviceNotifier: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    LibUsbDotNet.DeviceNotify.IDeviceNotifier
  Fields:
    Int32 PollingInterval : Public, Static
  Properties:
    LibUsbDotNet.DeviceNotify.Linux.LinuxDeviceNotifierMode Mode 'get ' : 
    Boolean Enabled 'get set' : 
  Events:
    System.EventHandler`1[LibUsbDotNet.DeviceNotify.DeviceNotifyEventArgs] OnDeviceNotify: 
  Methods:
    get_Mode(): PrivateScope, Public, HideBySig, SpecialName
    get_Enabled(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Enabled(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_OnDeviceNotify(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_OnDeviceNotify(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class MonoLibUsb.Profile.MonoUsbProfileList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerable`1[MonoLibUsb.Profile.MonoUsbProfile]
    System.Collections.IEnumerable
  Properties:
    Int32 Count 'get ' : 
    MonoLibUsb.Profile.MonoUsbProfile Item [Int32] 'get ' : 
  Events:
    System.EventHandler`1[MonoLibUsb.Profile.AddRemoveEventArgs] AddRemoveEvent: 
  Methods:
    Refresh(MonoUsbSessionHandle): PrivateScope, Public, HideBySig
    Close(): PrivateScope, Public, HideBySig
    add_AddRemoveEvent(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_AddRemoveEvent(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    GetList(): PrivateScope, Public, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
Class MonoLibUsb.Profile.MonoUsbProfile: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Properties:
    MonoLibUsb.Descriptors.MonoUsbDeviceDescriptor DeviceDescriptor 'get ' : 
    Byte BusNumber 'get ' : 
    Byte DeviceAddress 'get ' : 
    MonoLibUsb.Profile.MonoUsbProfileHandle ProfileHandle 'get ' : 
  Methods:
    get_DeviceDescriptor(): PrivateScope, Public, HideBySig, SpecialName
    get_BusNumber(): PrivateScope, Public, HideBySig, SpecialName
    get_DeviceAddress(): PrivateScope, Public, HideBySig, SpecialName
    get_ProfileHandle(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    op_Equality(MonoUsbProfile, MonoUsbProfile): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(MonoUsbProfile, MonoUsbProfile): PrivateScope, Public, Static, HideBySig, SpecialName
    Close(): PrivateScope, Public, HideBySig
    OpenDeviceHandle(): PrivateScope, Public, HideBySig
    Equals(MonoUsbProfile): PrivateScope, Public, HideBySig
Class LibUsbDotNet.UsbDevice: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    Boolean ForceLibUsbWinBack : Public, Static
  Properties:
    LibUsbDotNet.Main.UsbRegDeviceList AllWinUsbDevices 'get ' : 
    Boolean HasLibUsbDriver 'get ' :  (Obsolete)
    Boolean HasWinUsbDriver 'get ' : 
    Boolean HasLibUsbWinBackDriver 'get ' : 
    Boolean IsLinux 'get ' : 
    LibUsbDotNet.LibUsb.LibUsbKernelType KernelType 'get ' : 
    LibUsbDotNet.Main.UsbKernelVersion KernelVersion 'get ' : 
    System.OperatingSystem OSVersion 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[LibUsbDotNet.Info.UsbConfigInfo] Configs 'get ' : 
    LibUsbDotNet.Info.UsbDeviceInfo Info 'get ' : 
    LibUsbDotNet.Main.UsbRegistry UsbRegistryInfo 'get ' : 
    Boolean IsOpen 'get ' : 
    LibUsbDotNet.Main.UsbEndpointList ActiveEndpoints 'get ' : 
    DriverModeType DriverMode 'get ' : 
    LibUsbDotNet.Main.UsbRegDeviceList AllDevices 'get ' : 
    LibUsbDotNet.Main.UsbRegDeviceList AllLibUsbDevices 'get ' : 
    Int32 LastErrorNumber 'get ' : 
    System.String LastErrorString 'get ' : 
  Events:
    System.EventHandler`1[LibUsbDotNet.UsbError] UsbErrorEvent: 
  Methods:
    get_AllWinUsbDevices(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_HasLibUsbDriver(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_HasWinUsbDriver(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_HasLibUsbWinBackDriver(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsLinux(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_KernelType(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_KernelVersion(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_OSVersion(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Configs(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Info(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_UsbRegistryInfo(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsOpen(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ActiveEndpoints(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DriverMode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Open(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ControlTransfer(UsbSetupPacket&, IntPtr, Int32, Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ControlTransfer(UsbSetupPacket&, Object, Int32, Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetConfiguration(Byte&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetDescriptor(Byte, Byte, Int16, IntPtr, Int32, Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OpenEndpointWriter(WriteEndpointID): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OpenEndpointWriter(WriteEndpointID, EndpointType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetDescriptor(Byte, Byte, Int16, Object, Int32, Int32&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetLangIDs(Int16[]&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetString(String&(Out), Int16, Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    OpenEndpointReader(ReadEndpointID): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    OpenEndpointReader(ReadEndpointID, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    OpenEndpointReader(ReadEndpointID, Int32, EndpointType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAltInterfaceSetting(Byte, Byte&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Exit(): PrivateScope, Public, Static, HideBySig
    get_AllDevices(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_AllLibUsbDevices(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LastErrorNumber(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LastErrorString(): PrivateScope, Public, Static, HideBySig, SpecialName
    OpenUsbDevice(UsbDeviceFinder): PrivateScope, Public, Static, HideBySig
    OpenUsbDevice(Predicate`1): PrivateScope, Public, Static, HideBySig
    OpenUsbDevice(Guid&, UsbDevice&(Out)): PrivateScope, Public, Static, HideBySig
    add_UsbErrorEvent(EventHandler`1): PrivateScope, Public, Static, HideBySig, SpecialName
    remove_UsbErrorEvent(EventHandler`1): PrivateScope, Public, Static, HideBySig, SpecialName
Struct LibUsbDotNet.UsbDevice+DriverModeType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DriverModeType Unknown = 0 : Public, Static, Literal, HasDefault
    DriverModeType LibUsb = 1 : Public, Static, Literal, HasDefault
    DriverModeType WinUsb = 2 : Public, Static, Literal, HasDefault
    DriverModeType MonoLibUsb = 3 : Public, Static, Literal, HasDefault
    DriverModeType LibUsbWinBack = 4 : Public, Static, Literal, HasDefault
Interface LibUsbDotNet.IUsbInterface: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    LibUsbDotNet.Main.UsbEndpointList ActiveEndpoints 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[LibUsbDotNet.Info.UsbConfigInfo] Configs 'get ' : 
    DriverModeType DriverMode 'get ' : 
    LibUsbDotNet.Info.UsbDeviceInfo Info 'get ' : 
    Boolean IsOpen 'get ' : 
    LibUsbDotNet.Main.UsbRegistry UsbRegistryInfo 'get ' : 
  Methods:
    get_ActiveEndpoints(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Configs(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_DriverMode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Info(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsOpen(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_UsbRegistryInfo(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ControlTransfer(UsbSetupPacket&, IntPtr, Int32, Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ControlTransfer(UsbSetupPacket&, Object, Int32, Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetDescriptor(Byte, Byte, Int16, IntPtr, Int32, Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetDescriptor(Byte, Byte, Int16, Object, Int32, Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetLangIDs(Int16[]&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetString(String&(Out), Int16, Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Open(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OpenEndpointReader(ReadEndpointID, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OpenEndpointReader(ReadEndpointID, Int32, EndpointType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OpenEndpointReader(ReadEndpointID): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OpenEndpointWriter(WriteEndpointID): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OpenEndpointWriter(WriteEndpointID, EndpointType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface LibUsbDotNet.IUsbDevice: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    LibUsbDotNet.IUsbInterface
  Methods:
    SetConfiguration(Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetConfiguration(Byte&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetAltInterface(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetAltInterfaceSetting(Byte, Byte&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ClaimInterface(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReleaseInterface(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ResetDevice(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class LibUsbDotNet.LibUsb.LibUsbDevice: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :LibUsbDotNet.UsbDevice
  Interfaces:
    LibUsbDotNet.IUsbDevice
    LibUsbDotNet.IUsbInterface
  Properties:
    System.Collections.Generic.List`1[LibUsbDotNet.LibUsb.LibUsbDevice] LegacyLibUsbDeviceList 'get ' : 
    System.String DeviceFilename 'get ' : 
    DriverModeType DriverMode 'get ' : 
  Methods:
    get_LegacyLibUsbDeviceList(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DeviceFilename(): PrivateScope, Public, HideBySig, SpecialName
    Open(): PrivateScope, Public, Virtual, HideBySig
    ClaimInterface(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_DriverMode(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig
    ReleaseInterface(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetAltInterface(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetConfiguration(Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Open(String, LibUsbDevice&(Out)): PrivateScope, Public, Static, HideBySig
    ReleaseAllInterfaces(): PrivateScope, Public, HideBySig
    ReleaseInterface(): PrivateScope, Public, HideBySig
    SetAltInterface(Int32, Int32): PrivateScope, Public, HideBySig
    ResetDevice(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class MonoLibUsb.Transfer.MonoUsbControlSetup: AutoLayout, AnsiClass, Class, Public, SequentialLayout, BeforeFieldInit
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 SETUP_PACKET_SIZE : Public, Static
  Properties:
    Byte RequestType 'get set' : 
    Byte Request 'get set' : 
    Int16 Value 'get set' : 
    Int16 Index 'get set' : 
    Int16 Length 'get set' : 
    IntPtr PtrData 'get ' : 
  Methods:
    get_RequestType(): PrivateScope, Public, HideBySig, SpecialName
    set_RequestType(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_Request(): PrivateScope, Public, HideBySig, SpecialName
    set_Request(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_Index(): PrivateScope, Public, HideBySig, SpecialName
    set_Index(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    set_Length(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_PtrData(): PrivateScope, Public, HideBySig, SpecialName
    SetData(Object, Int32, Int32): PrivateScope, Public, HideBySig
    GetData(Int32): PrivateScope, Public, HideBySig
Class LibUsbDotNet.Info.UsbBaseInfo: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.Byte[]] CustomDescriptors 'get ' : 
  Methods:
    get_CustomDescriptors(): PrivateScope, Public, HideBySig, SpecialName
Class LibUsbDotNet.Info.UsbConfigInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :LibUsbDotNet.Info.UsbBaseInfo
  Properties:
    LibUsbDotNet.Descriptors.UsbConfigDescriptor Descriptor 'get ' : 
    System.String ConfigString 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[LibUsbDotNet.Info.UsbInterfaceInfo] InterfaceInfoList 'get ' : 
  Methods:
    get_Descriptor(): PrivateScope, Public, HideBySig, SpecialName
    get_ConfigString(): PrivateScope, Public, HideBySig, SpecialName
    get_InterfaceInfoList(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(String, String, String): PrivateScope, Public, HideBySig
Struct LibUsbDotNet.DeviceNotify.EventType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    LibUsbDotNet.DeviceNotify.EventType CustomEvent = 32774 : Public, Static, Literal, HasDefault
    LibUsbDotNet.DeviceNotify.EventType DeviceArrival = 32768 : Public, Static, Literal, HasDefault
    LibUsbDotNet.DeviceNotify.EventType DeviceQueryRemove = 32769 : Public, Static, Literal, HasDefault
    LibUsbDotNet.DeviceNotify.EventType DeviceQueryRemoveFailed = 32770 : Public, Static, Literal, HasDefault
    LibUsbDotNet.DeviceNotify.EventType DeviceRemoveComplete = 32772 : Public, Static, Literal, HasDefault
    LibUsbDotNet.DeviceNotify.EventType DeviceRemovePending = 32771 : Public, Static, Literal, HasDefault
    LibUsbDotNet.DeviceNotify.EventType DeviceTypeSpecific = 32773 : Public, Static, Literal, HasDefault
Class LibUsbDotNet.UsbGlobals: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
Class LibUsbDotNet.Main.UsbEndpointList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Interfaces:
    System.Collections.Generic.IEnumerable`1[LibUsbDotNet.Main.UsbEndpointBase]
    System.Collections.IEnumerable
  Properties:
    LibUsbDotNet.Main.UsbEndpointBase Item [Int32] 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, HideBySig
    Contains(UsbEndpointBase): PrivateScope, Public, HideBySig
    IndexOf(UsbEndpointBase): PrivateScope, Public, HideBySig
    Remove(UsbEndpointBase): PrivateScope, Public, HideBySig
    RemoveAt(Int32): PrivateScope, Public, HideBySig
Class LibUsbDotNet.UsbError: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
  Properties:
    System.Object Sender 'get ' : 
    LibUsbDotNet.Main.ErrorCode ErrorCode 'get ' : 
    Int32 Win32ErrorNumber 'get ' : 
    System.String Description 'get ' : 
    System.String Win32ErrorString 'get ' : 
  Methods:
    get_Sender(): PrivateScope, Public, HideBySig, SpecialName
    get_ErrorCode(): PrivateScope, Public, HideBySig, SpecialName
    get_Win32ErrorNumber(): PrivateScope, Public, HideBySig, SpecialName
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    get_Win32ErrorString(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class LibUsbDotNet.Main.UsbRegistry: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    Boolean ForceSetupApi : Public, Static
  Properties:
    System.Collections.Generic.Dictionary`2[System.String,System.Object] DeviceProperties 'get ' : 
    Boolean IsAlive 'get ' : 
    System.String SymbolicName 'get ' : 
    System.Guid[] DeviceInterfaceGuids 'get ' : 
    Int32 Vid  'get ' : 
    Int32 Pid  'get ' : 
    System.Object Item [System.String] 'get ' : 
    System.Object Item [LibUsbDotNet.Main.SPDRP] 'get ' : 
    System.Object Item [LibUsbDotNet.Main.DevicePropertyType] 'get ' : 
    System.String Name 'get ' : 
    System.String FullName 'get ' : 
    Int32 Count 'get ' : 
    Int32 Rev  'get ' : 
    LibUsbDotNet.UsbDevice Device 'get ' : 
  Methods:
    get_DeviceProperties(): PrivateScope, Public, HideBySig, SpecialName
    get_IsAlive(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_SymbolicName(): PrivateScope, Public, HideBySig, SpecialName
    get_DeviceInterfaceGuids(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Vid(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Pid(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(String): PrivateScope, Public, HideBySig, SpecialName
    get_Item(SPDRP): PrivateScope, Public, HideBySig, SpecialName
    get_Item(DevicePropertyType): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_FullName(): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_Rev(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Device(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Open(UsbDevice&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class LibUsbDotNet.Main.LegacyUsbRegistry: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :LibUsbDotNet.Main.UsbRegistry
  Properties:
    LibUsbDotNet.UsbDevice Device 'get ' : 
    System.Guid[] DeviceInterfaceGuids 'get ' : 
    Boolean IsAlive 'get ' : 
    System.Collections.Generic.List`1[LibUsbDotNet.Main.LegacyUsbRegistry] DeviceList 'get ' : 
    Int32 Rev  'get ' : 
  Methods:
    get_Device(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_DeviceInterfaceGuids(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsAlive(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_DeviceList(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Rev(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Open(UsbDevice&(Out)): PrivateScope, Public, Virtual, HideBySig
Class MonoLibUsb.Descriptors.MonoUsbEndpointDescriptor: AutoLayout, AnsiClass, Class, Public, SequentialLayout, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte bLength : Public, InitOnly
    LibUsbDotNet.Descriptors.DescriptorType bDescriptorType : Public, InitOnly
    Byte bEndpointAddress : Public, InitOnly
    Byte bmAttributes : Public, InitOnly
    Int16 wMaxPacketSize : Public, InitOnly
    Byte bInterval : Public, InitOnly
    Byte bRefresh : Public, InitOnly
    Byte bSynchAddress : Public, InitOnly
    Int32 ExtraLength : Public, InitOnly
  Properties:
    Byte[] ExtraBytes 'get ' : 
  Methods:
    get_ExtraBytes(): PrivateScope, Public, HideBySig, SpecialName
Class MonoLibUsb.Profile.AddRemoveEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
  Properties:
    MonoLibUsb.Profile.MonoUsbProfile MonoUSBProfile 'get ' : 
    MonoLibUsb.Profile.AddRemoveType EventType 'get ' : 
  Methods:
    get_MonoUSBProfile(): PrivateScope, Public, HideBySig, SpecialName
    get_EventType(): PrivateScope, Public, HideBySig, SpecialName
Class LibUsbDotNet.DeviceNotify.DeviceNotifyEventArgs: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.EventArgs
  Properties:
    LibUsbDotNet.DeviceNotify.Info.IVolumeNotifyInfo Volume 'get ' : 
    LibUsbDotNet.DeviceNotify.Info.IPortNotifyInfo Port 'get ' : 
    LibUsbDotNet.DeviceNotify.Info.IUsbDeviceNotifyInfo Device 'get ' : 
    LibUsbDotNet.DeviceNotify.EventType EventType 'get ' : 
    LibUsbDotNet.DeviceNotify.DeviceType DeviceType 'get ' : 
    System.Object Object 'get ' : 
  Methods:
    get_Volume(): PrivateScope, Public, HideBySig, SpecialName
    get_Port(): PrivateScope, Public, HideBySig, SpecialName
    get_Device(): PrivateScope, Public, HideBySig, SpecialName
    get_EventType(): PrivateScope, Public, HideBySig, SpecialName
    get_DeviceType(): PrivateScope, Public, HideBySig, SpecialName
    get_Object(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct LibUsbDotNet.Descriptors.DescriptorType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    LibUsbDotNet.Descriptors.DescriptorType Device = 1 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Descriptors.DescriptorType Configuration = 2 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Descriptors.DescriptorType String = 3 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Descriptors.DescriptorType Interface = 4 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Descriptors.DescriptorType Endpoint = 5 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Descriptors.DescriptorType DeviceQualifier = 6 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Descriptors.DescriptorType OtherSpeedConfiguration = 7 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Descriptors.DescriptorType InterfacePower = 8 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Descriptors.DescriptorType OTG = 9 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Descriptors.DescriptorType Debug = 10 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Descriptors.DescriptorType InterfaceAssociation = 11 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Descriptors.DescriptorType Hid = 33 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Descriptors.DescriptorType HidReport = 34 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Descriptors.DescriptorType Physical = 35 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Descriptors.DescriptorType Hub = 41 : Public, Static, Literal, HasDefault
Struct LibUsbDotNet.Descriptors.ClassCodeType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    LibUsbDotNet.Descriptors.ClassCodeType PerInterface = 0 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Descriptors.ClassCodeType Audio = 1 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Descriptors.ClassCodeType Comm = 2 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Descriptors.ClassCodeType Hid = 3 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Descriptors.ClassCodeType Printer = 7 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Descriptors.ClassCodeType Ptp = 6 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Descriptors.ClassCodeType MassStorage = 8 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Descriptors.ClassCodeType Hub = 9 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Descriptors.ClassCodeType Data = 10 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Descriptors.ClassCodeType VendorSpec = 255 : Public, Static, Literal, HasDefault
Class LibUsbDotNet.Main.UsbException: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Exception
  Properties:
    System.Object Sender 'get ' : 
  Methods:
    get_Sender(): PrivateScope, Public, HideBySig, SpecialName
Struct MonoLibUsb.UnixNativeTimeval: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int64, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    MonoLibUsb.UnixNativeTimeval WindowsDefault 'get ' : 
    MonoLibUsb.UnixNativeTimeval LinuxDefault 'get ' : 
    MonoLibUsb.UnixNativeTimeval Default 'get ' : 
    Int64 tv_sec 'get set' : 
    Int64 tv_usec 'get set' : 
  Methods:
    get_WindowsDefault(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LinuxDefault(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Default(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_tv_sec(): PrivateScope, Public, HideBySig, SpecialName
    set_tv_sec(Int64): PrivateScope, Public, HideBySig, SpecialName
    get_tv_usec(): PrivateScope, Public, HideBySig, SpecialName
    set_tv_usec(Int64): PrivateScope, Public, HideBySig, SpecialName
Struct LibUsbDotNet.Main.UsbRequestType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    LibUsbDotNet.Main.UsbRequestType TypeClass = 32 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.UsbRequestType TypeReserved = 96 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.UsbRequestType TypeStandard = 0 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.UsbRequestType TypeVendor = 64 : Public, Static, Literal, HasDefault
Class MonoLibUsb.Descriptors.MonoUsbAltInterfaceDescriptor: AutoLayout, AnsiClass, Class, Public, SequentialLayout, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte bLength : Public, InitOnly
    LibUsbDotNet.Descriptors.DescriptorType bDescriptorType : Public, InitOnly
    Byte bInterfaceNumber : Public, InitOnly
    Byte bAlternateSetting : Public, InitOnly
    Byte bNumEndpoints : Public, InitOnly
    LibUsbDotNet.Descriptors.ClassCodeType bInterfaceClass : Public, InitOnly
    Byte bInterfaceSubClass : Public, InitOnly
    Byte bInterfaceProtocol : Public, InitOnly
    Byte iInterface : Public, InitOnly
    Int32 ExtraLength : Public, InitOnly
  Properties:
    Byte[] ExtraBytes 'get ' : 
    System.Collections.Generic.List`1[MonoLibUsb.Descriptors.MonoUsbEndpointDescriptor] EndpointList 'get ' : 
  Methods:
    get_ExtraBytes(): PrivateScope, Public, HideBySig, SpecialName
    get_EndpointList(): PrivateScope, Public, HideBySig, SpecialName
Class LibUsbDotNet.Info.UsbInterfaceInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :LibUsbDotNet.Info.UsbBaseInfo
  Properties:
    LibUsbDotNet.Descriptors.UsbInterfaceDescriptor Descriptor 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[LibUsbDotNet.Info.UsbEndpointInfo] EndpointInfoList 'get ' : 
    System.String InterfaceString 'get ' : 
  Methods:
    get_Descriptor(): PrivateScope, Public, HideBySig, SpecialName
    get_EndpointInfoList(): PrivateScope, Public, HideBySig, SpecialName
    get_InterfaceString(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(String, String, String): PrivateScope, Public, HideBySig
Class LibUsbDotNet.WinUsb.WinUsbDevice: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :LibUsbDotNet.UsbDevice
  Interfaces:
    LibUsbDotNet.IUsbInterface
  Properties:
    LibUsbDotNet.WinUsb.PowerPolicies PowerPolicy 'get ' : 
    System.String DevicePath 'get ' : 
    DriverModeType DriverMode 'get ' : 
  Methods:
    get_PowerPolicy(): PrivateScope, Public, HideBySig, SpecialName
    get_DevicePath(): PrivateScope, Public, HideBySig, SpecialName
    get_DriverMode(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig
    Open(): PrivateScope, Public, Virtual, HideBySig
    Open(String, WinUsbDevice&(Out)): PrivateScope, Public, Static, HideBySig
    EndpointPolicies(ReadEndpointID): PrivateScope, Public, HideBySig
    EndpointPolicies(WriteEndpointID): PrivateScope, Public, HideBySig
    GetAssociatedInterface(Byte, WinUsbDevice&(Out)): PrivateScope, Public, HideBySig
    GetCurrentAlternateSetting(Byte&(Out)): PrivateScope, Public, HideBySig
    QueryDeviceSpeed(DeviceSpeedTypes&(Out)): PrivateScope, Public, HideBySig
    QueryInterfaceSettings(Byte, UsbInterfaceDescriptor&): PrivateScope, Public, HideBySig
    GetDevicePathList(Guid, List`1&(Out)): PrivateScope, Public, Static, HideBySig
Struct LibUsbDotNet.Main.UsbStandardRequest: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    LibUsbDotNet.Main.UsbStandardRequest ClearFeature = 1 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.UsbStandardRequest GetConfiguration = 8 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.UsbStandardRequest GetDescriptor = 6 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.UsbStandardRequest GetInterface = 10 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.UsbStandardRequest GetStatus = 0 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.UsbStandardRequest SetAddress = 5 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.UsbStandardRequest SetConfiguration = 9 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.UsbStandardRequest SetDescriptor = 7 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.UsbStandardRequest SetFeature = 3 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.UsbStandardRequest SetInterface = 11 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.UsbStandardRequest SynchFrame = 12 : Public, Static, Literal, HasDefault
Struct LibUsbDotNet.Main.ErrorCode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    LibUsbDotNet.Main.ErrorCode None = 0 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ErrorCode Success = 0 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ErrorCode Ok = 0 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ErrorCode InvalidConfig = -16384 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ErrorCode IoSyncFailed = -16383 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ErrorCode GetString = -16382 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ErrorCode InvalidEndpoint = -16381 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ErrorCode AbortEndpoint = -16380 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ErrorCode DeviceIoControl = -16379 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ErrorCode GetOverlappedResult = -16378 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ErrorCode ReceiveThreadTerminated = -16377 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ErrorCode WriteFailed = -16376 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ErrorCode ReadFailed = -16375 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ErrorCode IoControlMessage = -16374 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ErrorCode CancelIoFailed = -16373 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ErrorCode IoCancelled = -16372 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ErrorCode IoTimedOut = -16371 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ErrorCode IoEndpointGlobalCancelRedo = -16370 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ErrorCode GetDeviceKeyValueFailed = -16369 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ErrorCode SetDeviceKeyValueFailed = -16368 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ErrorCode Win32Error = -16367 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ErrorCode DeviceAllreadyLocked = -16366 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ErrorCode EndpointAllreadyLocked = -16365 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ErrorCode DeviceNotFound = -16364 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ErrorCode UserAborted = -16363 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ErrorCode InvalidParam = -16362 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ErrorCode AccessDenied = -16361 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ErrorCode ResourceBusy = -16360 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ErrorCode Overflow = -16359 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ErrorCode PipeError = -16358 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ErrorCode Interrupted = -16357 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ErrorCode InsufficientMemory = -16356 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ErrorCode NotSupported = -16355 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ErrorCode UnknownError = -16354 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ErrorCode MonoApiError = -16353 : Public, Static, Literal, HasDefault
Class MonoLibUsb.Descriptors.MonoUsbConfigDescriptor: AutoLayout, AnsiClass, Class, Public, SequentialLayout, BeforeFieldInit
    Void .ctor(MonoLibUsb.Profile.MonoUsbConfigHandle): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte bLength : Public, InitOnly
    LibUsbDotNet.Descriptors.DescriptorType bDescriptorType : Public, InitOnly
    Int16 wTotalLength : Public, InitOnly
    Byte bNumInterfaces : Public, InitOnly
    Byte bConfigurationValue : Public, InitOnly
    Byte iConfiguration : Public, InitOnly
    Byte bmAttributes : Public, InitOnly
    Byte MaxPower : Public, InitOnly
    Int32 ExtraLength : Public, InitOnly
  Properties:
    Byte[] ExtraBytes 'get ' : 
    System.Collections.Generic.List`1[MonoLibUsb.Descriptors.MonoUsbInterface] InterfaceList 'get ' : 
  Methods:
    get_ExtraBytes(): PrivateScope, Public, HideBySig, SpecialName
    get_InterfaceList(): PrivateScope, Public, HideBySig, SpecialName
Class LibUsbDotNet.Descriptors.UsbConfigDescriptor: AutoLayout, AnsiClass, Class, Public, SequentialLayout, BeforeFieldInit
  :LibUsbDotNet.Descriptors.UsbDescriptor
  Fields:
    Int16 TotalLength : Public, InitOnly
    Byte InterfaceCount : Public, InitOnly
    Byte ConfigID : Public, InitOnly
    Byte StringIndex : Public, InitOnly
    Byte Attributes : Public, InitOnly
    Byte MaxPower : Public, InitOnly
    Int32 Size : Public, Static, InitOnly
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(String, String, String): PrivateScope, Public, HideBySig
Struct LibUsbDotNet.Main.ReadEndpointID: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    LibUsbDotNet.Main.ReadEndpointID Ep01 = 129 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ReadEndpointID Ep02 = 130 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ReadEndpointID Ep03 = 131 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ReadEndpointID Ep04 = 132 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ReadEndpointID Ep05 = 133 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ReadEndpointID Ep06 = 134 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ReadEndpointID Ep07 = 135 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ReadEndpointID Ep08 = 136 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ReadEndpointID Ep09 = 137 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ReadEndpointID Ep10 = 138 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ReadEndpointID Ep11 = 139 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ReadEndpointID Ep12 = 140 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ReadEndpointID Ep13 = 141 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ReadEndpointID Ep14 = 142 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.ReadEndpointID Ep15 = 143 : Public, Static, Literal, HasDefault
Struct MonoLibUsb.Transfer.MonoUsbTansferStatus: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MonoLibUsb.Transfer.MonoUsbTansferStatus TransferCompleted = 0 : Public, Static, Literal, HasDefault
    MonoLibUsb.Transfer.MonoUsbTansferStatus TransferError = 1 : Public, Static, Literal, HasDefault
    MonoLibUsb.Transfer.MonoUsbTansferStatus TransferTimedOut = 2 : Public, Static, Literal, HasDefault
    MonoLibUsb.Transfer.MonoUsbTansferStatus TransferCancelled = 3 : Public, Static, Literal, HasDefault
    MonoLibUsb.Transfer.MonoUsbTansferStatus TransferStall = 4 : Public, Static, Literal, HasDefault
    MonoLibUsb.Transfer.MonoUsbTansferStatus TransferNoDevice = 5 : Public, Static, Literal, HasDefault
    MonoLibUsb.Transfer.MonoUsbTansferStatus TransferOverflow = 6 : Public, Static, Literal, HasDefault
Class LibUsbDotNet.LudnMonoLibUsb.MonoUsbDevice: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :LibUsbDotNet.UsbDevice
  Interfaces:
    LibUsbDotNet.IUsbDevice
    LibUsbDotNet.IUsbInterface
  Properties:
    System.Collections.Generic.List`1[LibUsbDotNet.LudnMonoLibUsb.MonoUsbDevice] MonoUsbDeviceList 'get ' : 
    Byte DeviceAddress 'get ' : 
    Byte BusNumber 'get ' : 
    DriverModeType DriverMode 'get ' : 
    MonoLibUsb.Profile.MonoUsbProfile Profile 'get ' : 
    LibUsbDotNet.Main.UsbRegistry UsbRegistryInfo 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[LibUsbDotNet.Info.UsbConfigInfo] Configs 'get ' : 
    LibUsbDotNet.Info.UsbDeviceInfo Info 'get ' : 
  Methods:
    get_MonoUsbDeviceList(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DeviceAddress(): PrivateScope, Public, HideBySig, SpecialName
    get_BusNumber(): PrivateScope, Public, HideBySig, SpecialName
    ResetDevice(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_DriverMode(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig
    ControlTransfer(UsbSetupPacket&, IntPtr, Int32, Int32&(Out)): PrivateScope, Public, Virtual, HideBySig
    GetDescriptor(Byte, Byte, Int16, IntPtr, Int32, Int32&(Out)): PrivateScope, Public, Virtual, HideBySig
    Open(): PrivateScope, Public, Virtual, HideBySig
    get_Profile(): PrivateScope, Public, HideBySig, SpecialName
    OpenEndpointReader(ReadEndpointID, Int32, EndpointType): PrivateScope, Public, Virtual, HideBySig
    OpenEndpointWriter(WriteEndpointID, EndpointType): PrivateScope, Public, Virtual, HideBySig
    SetConfiguration(Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetConfiguration(Byte&(Out)): PrivateScope, Public, Virtual, HideBySig
    get_UsbRegistryInfo(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Configs(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Info(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ClaimInterface(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ReleaseInterface(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetAltInterface(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Init(): PrivateScope, Public, Static, HideBySig
Class LibUsbDotNet.Main.UsbConstants: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Fields:
    Int32 DEFAULT_TIMEOUT = 1000 : Public, Static, Literal, HasDefault
    Int32 MAX_CONFIG_SIZE = 4096 : Public, Static, Literal, HasDefault
    Int32 MAX_DEVICES = 128 : Public, Static, Literal, HasDefault
    Int32 MAX_ENDPOINTS = 32 : Public, Static, Literal, HasDefault
    Byte ENDPOINT_DIR_MASK = 128 : Public, Static, Literal, HasDefault
    Byte ENDPOINT_NUMBER_MASK = 15 : Public, Static, Literal, HasDefault
Class LibUsbDotNet.Main.EndpointDataEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
  Properties:
    Byte[] Buffer 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    get_Buffer(): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
Struct MonoLibUsb.Transfer.MonoUsbTransfer: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    IntPtr PtrBuffer 'get set' : 
    IntPtr PtrUserData 'get set' : 
    IntPtr PtrCallbackFn 'get set' : 
    Int32 ActualLength 'get set' : 
    Int32 Length 'get set' : 
    MonoLibUsb.Transfer.MonoUsbTansferStatus Status 'get set' : 
    Int32 Timeout 'get set' : 
    LibUsbDotNet.Main.EndpointType Type 'get set' : 
    Byte Endpoint 'get set' : 
    MonoLibUsb.Transfer.MonoUsbTransferFlags Flags 'get set' : 
    IntPtr PtrDeviceHandle 'get set' : 
    Int32 NumIsoPackets 'get set' : 
    Boolean IsInvalid 'get ' : 
  Methods:
    get_PtrBuffer(): PrivateScope, Public, HideBySig, SpecialName
    set_PtrBuffer(IntPtr): PrivateScope, Public, HideBySig, SpecialName
    get_PtrUserData(): PrivateScope, Public, HideBySig, SpecialName
    set_PtrUserData(IntPtr): PrivateScope, Public, HideBySig, SpecialName
    get_PtrCallbackFn(): PrivateScope, Public, HideBySig, SpecialName
    set_PtrCallbackFn(IntPtr): PrivateScope, Public, HideBySig, SpecialName
    get_ActualLength(): PrivateScope, Public, HideBySig, SpecialName
    set_ActualLength(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    set_Length(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Status(): PrivateScope, Public, HideBySig, SpecialName
    set_Status(MonoUsbTansferStatus): PrivateScope, Public, HideBySig, SpecialName
    get_Timeout(): PrivateScope, Public, HideBySig, SpecialName
    set_Timeout(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(EndpointType): PrivateScope, Public, HideBySig, SpecialName
    get_Endpoint(): PrivateScope, Public, HideBySig, SpecialName
    set_Endpoint(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_Flags(): PrivateScope, Public, HideBySig, SpecialName
    set_Flags(MonoUsbTransferFlags): PrivateScope, Public, HideBySig, SpecialName
    get_PtrDeviceHandle(): PrivateScope, Public, HideBySig, SpecialName
    set_PtrDeviceHandle(IntPtr): PrivateScope, Public, HideBySig, SpecialName
    get_NumIsoPackets(): PrivateScope, Public, HideBySig, SpecialName
    set_NumIsoPackets(Int32): PrivateScope, Public, HideBySig, SpecialName
    Free(): PrivateScope, Public, HideBySig
    UniqueName(): PrivateScope, Public, HideBySig
    IsoPacket(Int32): PrivateScope, Public, HideBySig
    get_IsInvalid(): PrivateScope, Public, HideBySig, SpecialName
    Cancel(): PrivateScope, Public, HideBySig
    FillBulk(MonoUsbDeviceHandle, Byte, IntPtr, Int32, Delegate, IntPtr, Int32): PrivateScope, Public, HideBySig
    FillInterrupt(MonoUsbDeviceHandle, Byte, IntPtr, Int32, Delegate, IntPtr, Int32): PrivateScope, Public, HideBySig
    FillIsochronous(MonoUsbDeviceHandle, Byte, IntPtr, Int32, Int32, Delegate, IntPtr, Int32): PrivateScope, Public, HideBySig
    GetIsoPacketBuffer(Int32): PrivateScope, Public, HideBySig
    GetIsoPacketBufferSimple(Int32): PrivateScope, Public, HideBySig
    SetIsoPacketLengths(Int32): PrivateScope, Public, HideBySig
    Submit(): PrivateScope, Public, HideBySig
    Alloc(Int32): PrivateScope, Public, Static, HideBySig
    FillControl(MonoUsbDeviceHandle, MonoUsbControlSetupHandle, Delegate, IntPtr, Int32): PrivateScope, Public, HideBySig
Class MonoLibUsb.MonoUsbEventHandler: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Properties:
    MonoLibUsb.MonoUsbSessionHandle SessionHandle 'get ' : 
    Boolean IsStopped 'get ' : 
    System.Threading.ThreadPriority Priority 'get set' : 
  Methods:
    get_SessionHandle(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsStopped(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Priority(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_Priority(ThreadPriority): PrivateScope, Public, Static, HideBySig, SpecialName
    Exit(): PrivateScope, Public, Static, HideBySig
    Init(Int64, Int64): PrivateScope, Public, Static, HideBySig
    Init(): PrivateScope, Public, Static, HideBySig
    Start(): PrivateScope, Public, Static, HideBySig
    Stop(Boolean): PrivateScope, Public, Static, HideBySig
Class LibUsbDotNet.Main.DataReceivedEnabledChangedEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
  Properties:
    LibUsbDotNet.Main.ErrorCode ErrorCode 'get ' : 
    Boolean Enabled 'get ' : 
  Methods:
    get_ErrorCode(): PrivateScope, Public, HideBySig, SpecialName
    get_Enabled(): PrivateScope, Public, HideBySig, SpecialName
Interface LibUsbDotNet.DeviceNotify.Info.IUsbDeviceNotifyInfo: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    LibUsbDotNet.Main.UsbSymbolicName SymbolicName 'get ' : 
    System.String Name 'get ' : 
    System.Guid ClassGuid 'get ' : 
    Int32 IdVendor 'get ' : 
    Int32 IdProduct 'get ' : 
    System.String SerialNumber 'get ' : 
  Methods:
    get_SymbolicName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ClassGuid(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IdVendor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IdProduct(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_SerialNumber(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class LibUsbDotNet.Main.UsbDeviceFinder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32, Int32, Int32, System.String, System.Guid): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Guid): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Runtime.Serialization.ISerializable
  Fields:
    System.Guid NO_GUID : Public, Static, InitOnly
    Int32 NO_PID = 2147483647 : Public, Static, Literal, HasDefault
    Int32 NO_REV = 2147483647 : Public, Static, Literal, HasDefault
    System.String NO_SERIAL =  : Public, Static, Literal, HasDefault
    Int32 NO_VID = 2147483647 : Public, Static, Literal, HasDefault
  Properties:
    System.Guid DeviceInterfaceGuid 'get set' : 
    System.String SerialNumber 'get set' : 
    Int32 Revision 'get set' : 
    Int32 Pid  'get set' : 
    Int32 Vid  'get set' : 
  Methods:
    get_DeviceInterfaceGuid(): PrivateScope, Public, HideBySig, SpecialName
    set_DeviceInterfaceGuid(Guid): PrivateScope, Public, HideBySig, SpecialName
    get_SerialNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_SerialNumber(String): PrivateScope, Public, HideBySig, SpecialName
    get_Revision(): PrivateScope, Public, HideBySig, SpecialName
    set_Revision(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Pid(): PrivateScope, Public, HideBySig, SpecialName
    set_Pid(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Vid(): PrivateScope, Public, HideBySig, SpecialName
    set_Vid(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Load(Stream): PrivateScope, Public, Static, HideBySig
    Save(UsbDeviceFinder, Stream): PrivateScope, Public, Static, HideBySig
    Check(UsbRegistry): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Check(UsbDevice): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class LibUsbDotNet.Info.UsbDeviceInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Properties:
    LibUsbDotNet.Descriptors.UsbDeviceDescriptor Descriptor 'get ' : 
    Int16 CurrentCultureLangID 'get ' : 
    System.String ManufacturerString 'get ' : 
    System.String ProductString 'get ' : 
    System.String SerialString 'get ' : 
  Methods:
    get_Descriptor(): PrivateScope, Public, HideBySig, SpecialName
    get_CurrentCultureLangID(): PrivateScope, Public, HideBySig, SpecialName
    get_ManufacturerString(): PrivateScope, Public, HideBySig, SpecialName
    get_ProductString(): PrivateScope, Public, HideBySig, SpecialName
    get_SerialString(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(String, String, String): PrivateScope, Public, HideBySig
Class MonoLibUsb.Profile.MonoUsbProfileHandle: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :LibUsbDotNet.Main.SafeContextHandle
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class MonoLibUsb.Profile.MonoUsbConfigHandle: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :LibUsbDotNet.Main.SafeContextHandle
Class MonoLibUsb.Descriptors.MonoUsbDeviceDescriptor: AutoLayout, AnsiClass, Class, Public, SequentialLayout, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte Length : Public
    LibUsbDotNet.Descriptors.DescriptorType DescriptorType : Public
    Int16 BcdUsb : Public, InitOnly
    LibUsbDotNet.Descriptors.ClassCodeType Class : Public, InitOnly
    Byte SubClass : Public, InitOnly
    Byte Protocol : Public, InitOnly
    Byte MaxPacketSize0 : Public, InitOnly
    Int16 VendorID : Public, InitOnly
    Int16 ProductID : Public, InitOnly
    Int16 BcdDevice : Public, InitOnly
    Byte ManufacturerStringIndex : Public, InitOnly
    Byte ProductStringIndex : Public, InitOnly
    Byte SerialStringIndex : Public, InitOnly
    Byte ConfigurationCount : Public, InitOnly
    Int32 Size : Public, Static, InitOnly
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct LibUsbDotNet.Main.WriteEndpointID: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    LibUsbDotNet.Main.WriteEndpointID Ep01 = 1 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.WriteEndpointID Ep02 = 2 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.WriteEndpointID Ep03 = 3 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.WriteEndpointID Ep04 = 4 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.WriteEndpointID Ep05 = 5 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.WriteEndpointID Ep06 = 6 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.WriteEndpointID Ep07 = 7 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.WriteEndpointID Ep08 = 8 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.WriteEndpointID Ep09 = 9 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.WriteEndpointID Ep10 = 10 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.WriteEndpointID Ep11 = 11 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.WriteEndpointID Ep12 = 12 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.WriteEndpointID Ep13 = 13 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.WriteEndpointID Ep14 = 14 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.WriteEndpointID Ep15 = 15 : Public, Static, Literal, HasDefault
Class LibUsbDotNet.Main.UsbSymbolicName: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Properties:
    System.String FullName 'get ' : 
    Int32 Vid  'get ' : 
    Int32 Pid  'get ' : 
    System.String SerialNumber 'get ' : 
    System.Guid ClassGuid 'get ' : 
    Int32 Rev  'get ' : 
  Methods:
    get_FullName(): PrivateScope, Public, HideBySig, SpecialName
    get_Vid(): PrivateScope, Public, HideBySig, SpecialName
    get_Pid(): PrivateScope, Public, HideBySig, SpecialName
    get_SerialNumber(): PrivateScope, Public, HideBySig, SpecialName
    get_ClassGuid(): PrivateScope, Public, HideBySig, SpecialName
    get_Rev(): PrivateScope, Public, HideBySig, SpecialName
    Parse(String): PrivateScope, Public, Static, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class LibUsbDotNet.LibUsb.LibUsbRegistry: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :LibUsbDotNet.Main.UsbRegistry
  Properties:
    Int32 DeviceIndex 'get ' : 
    System.Collections.Generic.List`1[LibUsbDotNet.LibUsb.LibUsbRegistry] DeviceList 'get ' : 
    Boolean IsAlive 'get ' : 
    LibUsbDotNet.UsbDevice Device 'get ' : 
    System.Guid[] DeviceInterfaceGuids 'get ' : 
  Methods:
    get_DeviceIndex(): PrivateScope, Public, HideBySig, SpecialName
    get_DeviceList(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsAlive(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Device(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_DeviceInterfaceGuids(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Open(LibUsbDevice&(Out)): PrivateScope, Public, HideBySig
    Open(UsbDevice&(Out)): PrivateScope, Public, Virtual, HideBySig
Class MonoLibUsb.MonoUsbTransferDelegate: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(MonoUsbTransfer): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(MonoUsbTransfer, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class MonoLibUsb.PollfdAddedDelegate: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Int32, Int16, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Int32, Int16, IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class MonoLibUsb.PollfdRemovedDelegate: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Int32, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Int32, IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct LibUsbDotNet.LibUsb.LibUsbKernelType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    LibUsbDotNet.LibUsb.LibUsbKernelType Unknown = 0 : Public, Static, Literal, HasDefault
    LibUsbDotNet.LibUsb.LibUsbKernelType NativeLibUsb = 1 : Public, Static, Literal, HasDefault
    LibUsbDotNet.LibUsb.LibUsbKernelType LegacyLibUsb = 2 : Public, Static, Literal, HasDefault
    LibUsbDotNet.LibUsb.LibUsbKernelType MonoLibUsb = 3 : Public, Static, Literal, HasDefault
Class LibUsbDotNet.Descriptors.UsbDeviceDescriptor: AutoLayout, AnsiClass, Class, Public, SequentialLayout, BeforeFieldInit
  :LibUsbDotNet.Descriptors.UsbDescriptor
  Fields:
    Int16 BcdUsb : Public
    LibUsbDotNet.Descriptors.ClassCodeType Class : Public
    Byte SubClass : Public
    Byte Protocol : Public
    Byte MaxPacketSize0 : Public
    Int16 VendorID : Public
    Int16 ProductID : Public
    Int16 BcdDevice : Public
    Byte ManufacturerStringIndex : Public
    Byte ProductStringIndex : Public
    Byte SerialStringIndex : Public
    Byte ConfigurationCount : Public
    Int32 Size : Public, Static, InitOnly
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(String, String, String): PrivateScope, Public, HideBySig
    Equals(UsbDeviceDescriptor): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    op_Equality(UsbDeviceDescriptor, UsbDeviceDescriptor): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(UsbDeviceDescriptor, UsbDeviceDescriptor): PrivateScope, Public, Static, HideBySig, SpecialName
Class LibUsbDotNet.Main.UsbTransferQueue: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(LibUsbDotNet.Main.UsbEndpointBase, Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    LibUsbDotNet.Main.UsbEndpointBase EndpointBase : Public, InitOnly
    Int32 MaxOutstandingIO : Public, InitOnly
    Int32 BufferSize : Public, InitOnly
    Int32 Timeout : Public, InitOnly
    Int32 IsoPacketSize : Public, InitOnly
  Properties:
    Byte[] Item [Int32] 'get ' : 
    Byte[][] Buffer 'get ' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Buffer(): PrivateScope, Public, HideBySig, SpecialName
    Transfer(Handle&(Out)): PrivateScope, Public, HideBySig
    Free(): PrivateScope, Public, HideBySig
Class LibUsbDotNet.Main.UsbTransferQueue+Handle: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  Fields:
    LibUsbDotNet.Main.UsbTransfer Context : Public, InitOnly
    Byte[] Data : Public, InitOnly
    Int32 Transferred : Public
Class LibUsbDotNet.DeviceNotify.Linux.LinuxDeviceNotifyEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :LibUsbDotNet.DeviceNotify.DeviceNotifyEventArgs
Struct LibUsbDotNet.WinUsb.DeviceSpeedTypes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    LibUsbDotNet.WinUsb.DeviceSpeedTypes Undefined = 0 : Public, Static, Literal, HasDefault
    LibUsbDotNet.WinUsb.DeviceSpeedTypes LowSpeed = 1 : Public, Static, Literal, HasDefault
    LibUsbDotNet.WinUsb.DeviceSpeedTypes FullSpeed = 2 : Public, Static, Literal, HasDefault
    LibUsbDotNet.WinUsb.DeviceSpeedTypes HighSpeed = 3 : Public, Static, Literal, HasDefault
Class LibUsbDotNet.LudnMonoLibUsb.MonoUsbEndpointWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :LibUsbDotNet.UsbEndpointWriter
  Methods:
    Dispose(): PrivateScope, Public, Virtual, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig
    Reset(): PrivateScope, Public, Virtual, HideBySig
Class LibUsbDotNet.LudnMonoLibUsb.MonoUsbEndpointReader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :LibUsbDotNet.UsbEndpointReader
  Methods:
    Dispose(): PrivateScope, Public, Virtual, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig
    Reset(): PrivateScope, Public, Virtual, HideBySig
Interface LibUsbDotNet.DeviceNotify.Info.IPortNotifyInfo: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    System.String Name 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class LibUsbDotNet.DeviceNotify.Info.PortNotifyInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Interfaces:
    LibUsbDotNet.DeviceNotify.Info.IPortNotifyInfo
  Properties:
    System.String Name 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class LibUsbDotNet.DeviceNotify.DeviceNotifier: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    OpenDeviceNotifier(): PrivateScope, Public, Static, HideBySig
Class LibUsbDotNet.Descriptors.UsbInterfaceDescriptor: AutoLayout, AnsiClass, Class, Public, SequentialLayout, BeforeFieldInit
  :LibUsbDotNet.Descriptors.UsbDescriptor
  Fields:
    Byte InterfaceID : Public, InitOnly
    Byte AlternateID : Public, InitOnly
    Byte EndpointCount : Public, InitOnly
    LibUsbDotNet.Descriptors.ClassCodeType Class : Public, InitOnly
    Byte SubClass : Public, InitOnly
    Byte Protocol : Public, InitOnly
    Byte StringIndex : Public, InitOnly
    Int32 Size : Public, Static, InitOnly
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(String, String, String): PrivateScope, Public, HideBySig
Class MonoLibUsb.Transfer.MonoUsbControlSetupHandle: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :LibUsbDotNet.Main.SafeContextHandle
    Void .ctor(Byte, Byte, Int16, Int16, System.Object, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte, Byte, Int16, Int16, Int16): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    MonoLibUsb.Transfer.MonoUsbControlSetup ControlSetup 'get ' : 
  Methods:
    get_ControlSetup(): PrivateScope, Public, HideBySig, SpecialName
Class LibUsbDotNet.WinUsb.PipeInformation: AutoLayout, AnsiClass, Class, Public, SequentialLayout, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    LibUsbDotNet.Main.EndpointType PipeType : Public
    Byte PipeId : Public
    Int16 MaximumPacketSize : Public
    Byte Interval : Public
    Int32 Size : Public, Static, InitOnly
Class LibUsbDotNet.WinUsb.WinUsbRegistry: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :LibUsbDotNet.Main.UsbRegistry
  Properties:
    System.Collections.Generic.List`1[LibUsbDotNet.WinUsb.WinUsbRegistry] DeviceList 'get ' : 
    System.Guid[] DeviceInterfaceGuids 'get ' : 
    Boolean IsAlive 'get ' : 
    LibUsbDotNet.UsbDevice Device 'get ' : 
    System.String DeviceID 'get ' : 
    Int32 Vid  'get ' : 
    Int32 Pid  'get ' : 
    Byte InterfaceID 'get ' : 
  Methods:
    GetDevicePathList(Guid, List`1&(Out)): PrivateScope, Public, Static, HideBySig
    GetWinUsbRegistryList(Guid, List`1&(Out)): PrivateScope, Public, Static, HideBySig
    get_DeviceList(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DeviceInterfaceGuids(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsAlive(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Device(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_DeviceID(): PrivateScope, Public, HideBySig, SpecialName
    get_Vid(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Pid(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_InterfaceID(): PrivateScope, Public, HideBySig, SpecialName
    Open(UsbDevice&(Out)): PrivateScope, Public, Virtual, HideBySig
    Open(WinUsbDevice&(Out)): PrivateScope, Public, HideBySig
Class LibUsbDotNet.WinUsb.PowerPolicies: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Properties:
    Boolean AutoSuspend 'get set' : 
    Int32 SuspendDelay 'get set' : 
  Methods:
    get_AutoSuspend(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoSuspend(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_SuspendDelay(): PrivateScope, Public, HideBySig, SpecialName
    set_SuspendDelay(Int32): PrivateScope, Public, HideBySig, SpecialName
Class MonoLibUsb.MonoUsbApi: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    StrError(MonoUsbError): PrivateScope, Public, Static, HideBySig
    MonoLibUsbErrorFromTransferStatus(MonoUsbTansferStatus): PrivateScope, Public, Static, HideBySig
    GetConfigDescriptor(MonoUsbProfileHandle(In), Byte, MonoUsbConfigHandle&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    GetConfigDescriptorByValue(MonoUsbProfileHandle(In), Byte, MonoUsbConfigHandle&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    GetDescriptor(MonoUsbDeviceHandle, Byte, Byte, IntPtr, Int32): PrivateScope, Public, Static, HideBySig
    GetDescriptor(MonoUsbDeviceHandle, Byte, Byte, Object, Int32): PrivateScope, Public, Static, HideBySig
    TryLockEvents(MonoUsbSessionHandle(In)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    LockEvents(MonoUsbSessionHandle(In)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    UnlockEvents(MonoUsbSessionHandle(In)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    EventHandlingOk(MonoUsbSessionHandle(In)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    EventHandlerActive(MonoUsbSessionHandle(In)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    LockEventWaiters(MonoUsbSessionHandle(In)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    UnlockEventWaiters(MonoUsbSessionHandle(In)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    WaitForEvent(MonoUsbSessionHandle(In), UnixNativeTimeval&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    HandleEventsTimeout(MonoUsbSessionHandle(In), UnixNativeTimeval&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    HandleEvents(MonoUsbSessionHandle(In)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    HandleEventsLocked(MonoUsbSessionHandle(In), UnixNativeTimeval&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    PollfdsHandleTimeouts(MonoUsbSessionHandle(In)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    GetNextTimeout(MonoUsbSessionHandle(In), UnixNativeTimeval&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    SetPollfdNotifiers(MonoUsbSessionHandle(In), PollfdAddedDelegate, PollfdRemovedDelegate, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    GetPollfds(MonoUsbSessionHandle): PrivateScope, Public, Static, HideBySig
    ControlTransfer(MonoUsbDeviceHandle(In), Byte, Byte, Int16, Int16, IntPtr, Int16, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ControlTransferAsync(MonoUsbDeviceHandle(In), Byte, Byte, Int16, Int16, IntPtr, Int16, Int32): PrivateScope, Public, Static, HideBySig
    ControlTransfer(MonoUsbDeviceHandle(In), Byte, Byte, Int16, Int16, Object, Int16, Int32): PrivateScope, Public, Static, HideBySig
    BulkTransfer(MonoUsbDeviceHandle(In), Byte, IntPtr, Int32, Int32&(Out), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    BulkTransfer(MonoUsbDeviceHandle(In), Byte, Object, Int32, Int32&(Out), Int32): PrivateScope, Public, Static, HideBySig
    InterruptTransfer(MonoUsbDeviceHandle(In), Byte, IntPtr, Int32, Int32&(Out), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    InterruptTransfer(MonoUsbDeviceHandle(In), Byte, Object, Int32, Int32&(Out), Int32): PrivateScope, Public, Static, HideBySig
    SetDebug(MonoUsbSessionHandle(In), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    GetDeviceList(MonoUsbSessionHandle(In), MonoUsbProfileListHandle&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    GetBusNumber(MonoUsbProfileHandle(In)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    GetDeviceAddress(MonoUsbProfileHandle(In)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    GetMaxPacketSize(MonoUsbProfileHandle(In), Byte): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    GetMaxIsoPacketSize(MonoUsbProfileHandle(In), Byte): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    OpenDeviceWithVidPid(MonoUsbSessionHandle(In), Int16, Int16): PrivateScope, Public, Static, HideBySig
    GetDevice(MonoUsbDeviceHandle): PrivateScope, Public, Static, HideBySig
    GetConfiguration(MonoUsbDeviceHandle(In), Int32&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    SetConfiguration(MonoUsbDeviceHandle(In), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ClaimInterface(MonoUsbDeviceHandle(In), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ReleaseInterface(MonoUsbDeviceHandle(In), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    SetInterfaceAltSetting(MonoUsbDeviceHandle(In), Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ClearHalt(MonoUsbDeviceHandle(In), Byte): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ResetDevice(MonoUsbDeviceHandle(In)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    KernelDriverActive(MonoUsbDeviceHandle(In), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    DetachKernelDriver(MonoUsbDeviceHandle(In), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    AttachKernelDriver(MonoUsbDeviceHandle(In), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    GetDeviceDescriptor(MonoUsbProfileHandle(In), MonoUsbDeviceDescriptor(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    GetActiveConfigDescriptor(MonoUsbProfileHandle(In), MonoUsbConfigHandle&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
Struct LibUsbDotNet.Main.UsbCtrlFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    LibUsbDotNet.Main.UsbCtrlFlags Direction_In = 128 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.UsbCtrlFlags Direction_Out = 0 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.UsbCtrlFlags Recipient_Device = 0 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.UsbCtrlFlags Recipient_Endpoint = 2 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.UsbCtrlFlags Recipient_Interface = 1 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.UsbCtrlFlags Recipient_Other = 3 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.UsbCtrlFlags RequestType_Class = 32 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.UsbCtrlFlags RequestType_Reserved = 96 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.UsbCtrlFlags RequestType_Standard = 0 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.UsbCtrlFlags RequestType_Vendor = 64 : Public, Static, Literal, HasDefault
Struct LibUsbDotNet.DeviceNotify.Linux.LinuxDeviceNotifierMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    LibUsbDotNet.DeviceNotify.Linux.LinuxDeviceNotifierMode None = 0 : Public, Static, Literal, HasDefault
    LibUsbDotNet.DeviceNotify.Linux.LinuxDeviceNotifierMode PollDeviceList = 1 : Public, Static, Literal, HasDefault
    LibUsbDotNet.DeviceNotify.Linux.LinuxDeviceNotifierMode MonitorDevDirectory = 2 : Public, Static, Literal, HasDefault
Struct LibUsbDotNet.Main.UsbSetupPacket: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Byte, Byte, Int16, Int16, Int16): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte RequestType : Public
    Byte Request : Public
    Int16 Value : Public
    Int16 Index : Public
    Int16 Length : Public
Struct LibUsbDotNet.Main.SPDRP: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    LibUsbDotNet.Main.SPDRP DeviceDesc = 0 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.SPDRP HardwareId = 1 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.SPDRP CompatibleIds = 2 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.SPDRP Class = 7 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.SPDRP ClassGuid = 8 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.SPDRP Driver = 9 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.SPDRP Mfg = 11 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.SPDRP FriendlyName = 12 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.SPDRP LocationInformation = 13 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.SPDRP PhysicalDeviceObjectName = 14 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.SPDRP UiNumber = 16 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.SPDRP BusTypeGuid = 19 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.SPDRP LegacyBusType = 20 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.SPDRP BusNumber = 21 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.SPDRP EnumeratorName = 22 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.SPDRP Address = 28 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.SPDRP RemovalPolicy = 31 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.SPDRP InstallState = 34 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.SPDRP LocationPaths = 35 : Public, Static, Literal, HasDefault
Class MonoLibUsb.Profile.MonoUsbProfileListHandle: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :LibUsbDotNet.Main.SafeContextHandle
  Interfaces:
    System.Collections.Generic.IEnumerable`1[MonoLibUsb.Profile.MonoUsbProfileHandle]
    System.Collections.IEnumerable
  Methods:
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class MonoLibUsb.Transfer.MonoUsbIsoPacket: AutoLayout, AnsiClass, Class, Public, SequentialLayout, BeforeFieldInit
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    IntPtr PtrIsoPacket 'get ' : 
    Int32 ActualLength 'get set' : 
    Int32 Length 'get set' : 
    MonoLibUsb.Transfer.MonoUsbTansferStatus Status 'get set' : 
  Methods:
    get_PtrIsoPacket(): PrivateScope, Public, HideBySig, SpecialName
    get_ActualLength(): PrivateScope, Public, HideBySig, SpecialName
    set_ActualLength(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    set_Length(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Status(): PrivateScope, Public, HideBySig, SpecialName
    set_Status(MonoUsbTansferStatus): PrivateScope, Public, HideBySig, SpecialName
Class MonoLibUsb.Profile.PollfdItem: AutoLayout, AnsiClass, Class, Public, SequentialLayout, BeforeFieldInit
  Fields:
    Int32 fd : Public, InitOnly
    Int16 events : Public, InitOnly
Class LibUsbDotNet.DeviceNotify.WindowsDeviceNotifyEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :LibUsbDotNet.DeviceNotify.DeviceNotifyEventArgs
Struct LibUsbDotNet.Main.EndpointType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    LibUsbDotNet.Main.EndpointType Control = 0 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.EndpointType Isochronous = 1 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.EndpointType Bulk = 2 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.EndpointType Interrupt = 3 : Public, Static, Literal, HasDefault
Struct MonoLibUsb.MonoUsbError: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MonoLibUsb.MonoUsbError Success = 0 : Public, Static, Literal, HasDefault
    MonoLibUsb.MonoUsbError ErrorIO = -1 : Public, Static, Literal, HasDefault
    MonoLibUsb.MonoUsbError ErrorInvalidParam = -2 : Public, Static, Literal, HasDefault
    MonoLibUsb.MonoUsbError ErrorAccess = -3 : Public, Static, Literal, HasDefault
    MonoLibUsb.MonoUsbError ErrorNoDevice = -4 : Public, Static, Literal, HasDefault
    MonoLibUsb.MonoUsbError ErrorNotFound = -5 : Public, Static, Literal, HasDefault
    MonoLibUsb.MonoUsbError ErrorBusy = -6 : Public, Static, Literal, HasDefault
    MonoLibUsb.MonoUsbError ErrorTimeout = -7 : Public, Static, Literal, HasDefault
    MonoLibUsb.MonoUsbError ErrorOverflow = -8 : Public, Static, Literal, HasDefault
    MonoLibUsb.MonoUsbError ErrorPipe = -9 : Public, Static, Literal, HasDefault
    MonoLibUsb.MonoUsbError ErrorInterrupted = -10 : Public, Static, Literal, HasDefault
    MonoLibUsb.MonoUsbError ErrorNoMem = -11 : Public, Static, Literal, HasDefault
    MonoLibUsb.MonoUsbError ErrorNotSupported = -12 : Public, Static, Literal, HasDefault
    MonoLibUsb.MonoUsbError ErrorIOCancelled = -13 : Public, Static, Literal, HasDefault
    MonoLibUsb.MonoUsbError ErrorOther = -99 : Public, Static, Literal, HasDefault
Class LibUsbDotNet.Main.Helper: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Properties:
    System.OperatingSystem OSVersion 'get ' : 
    Boolean IsLinux 'get ' : 
  Methods:
    get_OSVersion(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsLinux(): PrivateScope, Public, Static, HideBySig, SpecialName
    BytesToObject(Byte[], Int32, Int32, Object): PrivateScope, Public, Static, HideBySig
    GetEnumData(Type): PrivateScope, Public, Static, HideBySig
    HostEndianToLE16(Int16): PrivateScope, Public, Static, HideBySig
    ShowAsHex(Object): PrivateScope, Public, Static, HideBySig
    ToString(String, String[], String, Object[], String): PrivateScope, Public, Static, HideBySig
    HexString(Byte[], String, String): PrivateScope, Public, Static, HideBySig
Class LibUsbDotNet.Main.PinnedHandle: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    IntPtr Handle 'get ' : 
  Methods:
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class MonoLibUsb.MonoUsbSessionHandle: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :LibUsbDotNet.Main.SafeContextHandle
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    MonoLibUsb.MonoUsbError LastErrorCode 'get ' : 
    System.String LastErrorString 'get ' : 
  Methods:
    get_LastErrorCode(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LastErrorString(): PrivateScope, Public, Static, HideBySig, SpecialName
Struct LibUsbDotNet.Main.UsbRequestRecipient: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    LibUsbDotNet.Main.UsbRequestRecipient RecipDevice = 0 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.UsbRequestRecipient RecipEndpoint = 2 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.UsbRequestRecipient RecipInterface = 1 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.UsbRequestRecipient RecipOther = 3 : Public, Static, Literal, HasDefault
Class LibUsbDotNet.Info.UsbEndpointInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :LibUsbDotNet.Info.UsbBaseInfo
  Properties:
    LibUsbDotNet.Descriptors.UsbEndpointDescriptor Descriptor 'get ' : 
  Methods:
    get_Descriptor(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(String, String, String): PrivateScope, Public, HideBySig
Class LibUsbDotNet.DeviceNotify.Info.UsbDeviceNotifyInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Interfaces:
    LibUsbDotNet.DeviceNotify.Info.IUsbDeviceNotifyInfo
  Properties:
    LibUsbDotNet.Main.UsbSymbolicName SymbolicName 'get ' : 
    System.String Name 'get ' : 
    System.Guid ClassGuid 'get ' : 
    Int32 IdVendor 'get ' : 
    Int32 IdProduct 'get ' : 
    System.String SerialNumber 'get ' : 
  Methods:
    get_SymbolicName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Name(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ClassGuid(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IdVendor(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IdProduct(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SerialNumber(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct MonoLibUsb.Transfer.MonoUsbTransferFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    MonoLibUsb.Transfer.MonoUsbTransferFlags None = 0 : Public, Static, Literal, HasDefault
    MonoLibUsb.Transfer.MonoUsbTransferFlags TransferShortNotOk = 1 : Public, Static, Literal, HasDefault
    MonoLibUsb.Transfer.MonoUsbTransferFlags TransferFreeBuffer = 2 : Public, Static, Literal, HasDefault
    MonoLibUsb.Transfer.MonoUsbTransferFlags TransferFreeTransfer = 4 : Public, Static, Literal, HasDefault
Struct LibUsbDotNet.Main.UsbKernelVersion: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 Major : Public, InitOnly
    Int32 Minor : Public, InitOnly
    Int32 Micro : Public, InitOnly
    Int32 Nano : Public, InitOnly
    Int32 BcdLibUsbDotNetKernelMod : Public, InitOnly
  Properties:
    Boolean IsEmpty 'get ' : 
  Methods:
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct LibUsbDotNet.Main.DevicePropertyType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    LibUsbDotNet.Main.DevicePropertyType DeviceDesc = 0 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.DevicePropertyType HardwareId = 1 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.DevicePropertyType CompatibleIds = 2 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.DevicePropertyType Class = 5 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.DevicePropertyType ClassGuid = 6 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.DevicePropertyType Driver = 7 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.DevicePropertyType Mfg = 8 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.DevicePropertyType FriendlyName = 9 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.DevicePropertyType LocationInformation = 10 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.DevicePropertyType PhysicalDeviceObjectName = 11 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.DevicePropertyType BusTypeGuid = 12 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.DevicePropertyType LegacyBusType = 13 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.DevicePropertyType BusNumber = 14 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.DevicePropertyType EnumeratorName = 15 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.DevicePropertyType Address = 16 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.DevicePropertyType UiNumber = 17 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.DevicePropertyType InstallState = 18 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.DevicePropertyType RemovalPolicy = 19 : Public, Static, Literal, HasDefault
Struct LibUsbDotNet.Main.UsbEndpointDirection: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    LibUsbDotNet.Main.UsbEndpointDirection EndpointIn = 128 : Public, Static, Literal, HasDefault
    LibUsbDotNet.Main.UsbEndpointDirection EndpointOut = 0 : Public, Static, Literal, HasDefault
Class LibUsbDotNet.DeviceNotify.WindowsDeviceNotifier: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    LibUsbDotNet.DeviceNotify.IDeviceNotifier
  Properties:
    Boolean Enabled 'get set' : 
  Events:
    System.EventHandler`1[LibUsbDotNet.DeviceNotify.DeviceNotifyEventArgs] OnDeviceNotify: 
  Methods:
    get_Enabled(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Enabled(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_OnDeviceNotify(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_OnDeviceNotify(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class LibUsbDotNet.DeviceNotify.Linux.LinuxUsbDeviceNotifyInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Interfaces:
    LibUsbDotNet.DeviceNotify.Info.IUsbDeviceNotifyInfo
  Properties:
    LibUsbDotNet.Descriptors.UsbDeviceDescriptor DeviceDescriptor 'get ' : 
    Byte BusNumber 'get ' : 
    Byte DeviceAddress 'get ' : 
    LibUsbDotNet.Main.UsbSymbolicName SymbolicName 'get ' : 
    System.String Name 'get ' : 
    System.Guid ClassGuid 'get ' : 
    Int32 IdVendor 'get ' : 
    Int32 IdProduct 'get ' : 
    System.String SerialNumber 'get ' : 
  Methods:
    get_DeviceDescriptor(): PrivateScope, Public, HideBySig, SpecialName
    get_BusNumber(): PrivateScope, Public, HideBySig, SpecialName
    get_DeviceAddress(): PrivateScope, Public, HideBySig, SpecialName
    get_SymbolicName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Name(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ClassGuid(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IdVendor(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IdProduct(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SerialNumber(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
